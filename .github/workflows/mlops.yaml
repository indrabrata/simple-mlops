name: "Simple MLOps Deployment 🚀"

permissions:
  contents: read
  packages: write

on:
  push:
    branches: [master]
    paths-ignore:
      - "README.md"
  pull_request:
    branches: [master]
    paths-ignore:
      - "README.md"

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/iris-ml
  MODEL_ARTIFACT_NAME: model-artifact
  MLFLOW_ARTIFACT_NAME: mlflow-artifacts

jobs:
  test_and_train:
    runs-on: self-hosted
    outputs:
      model-uploaded: ${{ steps.upload-model.outputs.artifact-uploaded }}
      mlflow-uploaded: ${{ steps.upload-mlflow.outputs.artifact-uploaded }}
    steps:
      - name: "Checkout code 📦"
        uses: actions/checkout@v4

      - name: "Set up Python 🐍"
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"
          architecture: <x64|x86>

      - name: "Install deps for tests/training 📚"
        run: python -m pip install -r requirements.txt

      - name: "Download dataset 📥"
        run: |
          if [ ! -f iris.csv ]; then
            curl -L -o iris.csv https://raw.githubusercontent.com/uiuc-cse/data-fa14/gh-pages/data/iris.csv
          fi

      - name: "Run data validation tests ✅"
        run: pytest -q tests/test_data_validation.py

      - name: "Run training (produce model artifact) 🤖"
        run: |
          mkdir -p models
          python src/train.py

      - name: "Run model tests ✅"
        run: pytest -q tests/test_model.py

      - name: "Run unit tests ✅"
        run: pytest -q tests/test_api.py

      - name: "Upload MLflow artifacts ⬆️"
        id: upload-mlflow
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MLFLOW_ARTIFACT_NAME }}
          path: mlruns/

      - name: "Upload Model artifacts ⬆️"
        id: upload-model
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.MODEL_ARTIFACT_NAME }}
          path: models/

  build_and_publish:
    runs-on: ubuntu-latest
    needs: test_and_train
    steps:
      - name: "Checkout code 📦"
        uses: actions/checkout@v4

      - name: "Download model artifact from previous job 📥"
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.MODEL_ARTIFACT_NAME }}
          path: ./models

      - name: "Set up Docker Buildx 🐳"
        uses: docker/setup-buildx-action@v3

      - name: "Login to GitHub Container Registry 🔑"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: echo "${GITHUB_TOKEN}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: "Build and push Docker image 🚢"
        run: |
          IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker build -t "${IMAGE_TAG}" .
          docker tag "${IMAGE_TAG}" "${{ env.IMAGE_NAME }}:latest"
          docker push "${IMAGE_TAG}"
          docker push "${{ env.IMAGE_NAME }}:latest"
